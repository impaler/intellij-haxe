Haxe File
  CLASS_DECLARATION
    PsiElement(class)('class')
    COMPONENT_NAME
      IDENTIFIER
        PsiElement(ID)('Offers')
    PsiElement({)('{')
    CLASS_BODY
      FUNCTION_DECLARATION_WITH_ATTRIBUTES
        DECLARATION_ATTRIBUTE
          ACCESS
            PsiElement(public)('public')
        PsiElement(function)('function')
        COMPONENT_NAME
          IDENTIFIER
            PsiElement(ID)('toString')
        PsiElement(()('(')
        PsiElement())(')')
        BLOCK_STATEMENT
          PsiElement({)('{')
          RETURN_STATEMENT
            PsiElement(return)('return')
            STRING_LITERAL_EXPRESSION
              PsiElement(OPEN_QUOTE)(''')
              PsiElement(REGULAR_STRING_PART)('{Offers: num:')
              SHORT_TEMPLATE_ENTRY
                PsiElement(SHORT_TEMPLATE_ENTRY_START)('$')
                REFERENCE_EXPRESSION
                  IDENTIFIER
                    PsiElement(ID)('offersNum')
              PsiElement(REGULAR_STRING_PART)(',')
              PsiElement(REGULAR_STRING_PART)('\n')
              LONG_TEMPLATE_ENTRY
                PsiElement(LONG_TEMPLATE_ENTRY_START)('${')
                CALL_EXPRESSION
                  REFERENCE_EXPRESSION
                    REFERENCE_EXPRESSION
                      IDENTIFIER
                        PsiElement(ID)('l')
                    PsiElement(.)('.')
                    REFERENCE_EXPRESSION
                      IDENTIFIER
                        PsiElement(ID)('toString')
                  PsiElement(()('(')
                  PsiElement())(')')
                PsiErrorElement:'&&', '(', '.', '...', <additive expression>, <assign operation>, <bitwise expression>, <compare expression>, <multiplicative expression>, <shift expression>, <suffix expression>, '?', '[' or '||' expected, got '\'
                  PsiElement(BAD_CHARACTER)('\')
          REFERENCE_EXPRESSION
            IDENTIFIER
              PsiElement(ID)('n')
          PsiErrorElement:'!', '(', '++', '-', '--', ';', ID, LITFLOAT, LITHEX, LITINT, LITOCT, OPEN_QUOTE, REG_EXP, '[', break, cast, continue, do, false, for, function, if, new, null, return, super, switch, this, throw, true, try, untyped, var, while, '{' or '~' expected, got '}'
            PsiElement(LONG_TEMPLATE_ENTRY_END)('}')
          PsiElement(REGULAR_STRING_PART)('\n')
          PsiElement(REGULAR_STRING_PART)('}')
          PsiElement(CLOSING_QUOTE)(''')
          PsiElement(;)(';')
          PsiElement(})('}')
      FUNCTION_DECLARATION_WITH_ATTRIBUTES
        DECLARATION_ATTRIBUTE
          ACCESS
            PsiElement(public)('public')
        PsiElement(function)('function')
        COMPONENT_NAME
          IDENTIFIER
            PsiElement(ID)('foo')
        PsiElement(()('(')
        PsiElement())(')')
        BLOCK_STATEMENT
          PsiElement({)('{')
          PsiElement(})('}')
    PsiElement(})('}')